<!--
project=SimTuning.WPF.UI, file=DynoDiagnosisView.xaml, creation=2020:7:7
Copyright (c) 2020 tuke productions. All rights reserved.
-->
<views:MvxWpfView xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                  xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
                  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                  xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
                  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                  xmlns:views="clr-namespace:MvvmCross.Platforms.Wpf.Views;assembly=MvvmCross.Platforms.Wpf"
                  xmlns:local="clr-namespace:SimTuning.Core.Converters;assembly=SimTuning.Core"
                  xmlns:behaviours="clr-namespace:SimTuning.WPF.UI.Business"
                  xmlns:region="clr-namespace:SimTuning.WPF.UI.Region"
                  xmlns:viewModels="clr-namespace:SimTuning.WPF.UI.ViewModels.Dyno"
                  x:TypeArguments="viewModels:DynoAudioPlayerViewModel"
                  mc:Ignorable="d"
                  region:MvxContainer.Header="AudioPlayer"
                  Name="AudioPlayer"
                  Background="{DynamicResource MaterialDesignPaper}"
                  d:DesignWidth="1024"
                  d:DesignHeight="60"
                  MinWidth="1024"
                  MinHeight="60"
                  x:Class="SimTuning.WPF.UI.Views.Dyno.DynoAudioPlayerView">
    <views:MvxWpfView.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <!--CONVERTER-->
            <BooleanToVisibilityConverter x:Key="BoolToVis" />
            <behaviours:NegateBooleanConverter x:Key="Inverter" />

            <!--2 CONVERTER kombiniert-->
            <behaviours:CombiningConverter x:Key="negatedBoolToVisibilityConverter"
                                           Converter1="{StaticResource Inverter}"
                                           Converter2="{StaticResource BoolToVis}">
            </behaviours:CombiningConverter>

            <local:TimeSpanToStringConverter x:Key="TimeSpanToString" />
        </ResourceDictionary>
    </views:MvxWpfView.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="1" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>

        <!--<Grid.GestureRecognizers>
            <TapGestureRecognizer mvx:Bi.nd="Command OpenPlayerCommand" />
        </Grid.GestureRecognizers>-->
        <!--<ProgressBar Grid.ColumnSpan="7"
                     HorizontalOptions="FillAndExpand"
                     ProgressColor="#FFF14431"
                     mvx:Bi.nd="Progress Progress" />-->

        <Slider x:Name="Slider"
                Grid.Row="1"
                Margin="10 0 10 0"
                HorizontalAlignment="Stretch"
                Style="{DynamicResource MaterialDesignSlider}"
                Value="{Binding Mode=TwoWay, Path=Position}"
                Thumb.DragCompleted="Slider_DragCompleted"
                Thumb.DragStarted="Slider_DragStarted"
                Minimum="0"
                Maximum="{Binding Mode=OneWay, Path=Duration}">
        </Slider>

        <Grid Grid.Row="2">
            <Grid.RowDefinitions>
                <RowDefinition Height="auto" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <!--<Label Grid.Column="0"
                   Content="{Binding TimeSpanPosition, Converter={StaticResource TimeSpanToString}}"
                   HorizontalAlignment="Left"
                   VerticalAlignment="Center" />
            <Label Grid.Column="1"
                   Content="{Binding TimeSpanDuration, Converter={StaticResource TimeSpanToString}}"
                   HorizontalAlignment="Right"
                   VerticalAlignment="Center" />-->
        </Grid>

        <Grid Grid.Row="3">
            <Grid.RowDefinitions>
                <RowDefinition Height="auto" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1.5*" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="1.5*" />
            </Grid.ColumnDefinitions>

            <Button Grid.Column="1"
                    Command="{Binding SkipBackwardsCommand}"
                    Content="{materialDesign:PackIcon Kind=SkipBackward}"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center" />

            <Button Grid.Column="2"
                    Content="{materialDesign:PackIcon Kind=Play}"
                    Command="{Binding PlayPauseCommand}"
                    HorizontalAlignment="Center"
                    Visibility="{Binding Path=IsPlaying,  Mode=OneWay, Converter={StaticResource negatedBoolToVisibilityConverter}}"
                    VerticalAlignment="Center" />

            <Button Grid.Column="2"
                    Content="{materialDesign:PackIcon Kind=Pause}"
                    Command="{Binding PlayPauseCommand}"
                    Visibility="{Binding Path=IsPlaying, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center" />

            <Button Grid.Column="3"
                    Content="{materialDesign:PackIcon Kind=SkipForward}"
                    Command="{Binding SkipForwardCommand}"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center" />
        </Grid>
    </Grid>
</views:MvxWpfView>
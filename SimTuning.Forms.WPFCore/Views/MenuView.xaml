<views:MvxWpfView  xmlns:views="clr-namespace:MvvmCross.Platforms.Wpf.Views;assembly=MvvmCross.Platforms.Wpf"
                   x:Class="SimTuning.Forms.WPFCore.Views.MenuView"
                   xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                   xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                   xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                   xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                   xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
                   xmlns:behaviours="clr-namespace:SimTuning.Forms.WPFCore.Business"
                   xmlns:region="clr-namespace:SimTuning.Forms.WPFCore.Region"
                   mc:Ignorable="d"
                   xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
                   x:TypeArguments="viewModels:MenuViewModel"
                   xmlns:viewModels="clr-namespace:SimTuning.Forms.WPFCore.ViewModels"
                   xmlns:utilities="clr-namespace:SimTuning.Forms.WPFCore.Menu"
                   xmlns:local="clr-namespace:SimTuning.Forms.WPFCore.Views.Home"
                   d:DesignHeight="670"
                   d:DesignWidth="1070"
                   MinHeight="670"
                   MinWidth="1070">
    <views:MvxWpfView.Resources>

        <!--CONVERTER-->
        <BooleanToVisibilityConverter x:Key="BoolToVis" />
        <behaviours:NegateBooleanConverter x:Key="Inverter" />

        <!--2 CONVERTER kombiniert-->
        <behaviours:CombiningConverter x:Key="negatedBoolToVisibilityConverter"
                                       Converter1="{StaticResource Inverter}"
                                       Converter2="{StaticResource BoolToVis}">
        </behaviours:CombiningConverter>
    </views:MvxWpfView.Resources>

    <materialDesign:DrawerHost IsLeftDrawerOpen="{Binding ElementName=MenuToggleButton, Path=IsChecked}"
                                       Grid.ColumnSpan="2"
                                       Grid.RowSpan="2">
        <materialDesign:DrawerHost.LeftDrawerContent>
            <DockPanel Width="300">
                <ToggleButton Style="{StaticResource MaterialDesignHamburgerToggleButton}"
                                      DockPanel.Dock="Top"
                                      HorizontalAlignment="Right"
                                      Margin="16"
                                      IsChecked="{Binding ElementName=MenuToggleButton, Path=IsChecked, Mode=TwoWay}" />
                <Menu>
                    <!--CUSTOM SUBMenu-->
                    <Menu.Resources>
                        <Style TargetType="MenuItem"
                               BasedOn="{StaticResource {x:Type MenuItem}}">
                            <Setter Property="utilities:TreeHelpers.Modifiers">
                                <Setter.Value>
                                    <utilities:ModifierCollection>
                                        <utilities:Modifier Property="{x:Static Popup.PlacementProperty}"
                                                                    Value="{x:Static PlacementMode.Right}"
                                                                    TemplatePartName="PART_Popup" />
                                    </utilities:ModifierCollection>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Menu.Resources>

                    <Menu.ItemsPanel>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel />
                        </ItemsPanelTemplate>
                    </Menu.ItemsPanel>

                    <MenuItem Header="Home" Command="{Binding ShowHomeCommand}">
                        <MenuItem.Icon>
                            <materialDesign:PackIcon Kind="ViewDashboard" />
                        </MenuItem.Icon>

                        <!--<MenuItem Header="Sub Item 1" />
                        <MenuItem Header="Sub Item 2" />
                        <MenuItem Header="Sub Item 3" />-->
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Click">
                                <i:InvokeCommandAction Command="{x:Static region:MvxWpfPresenter.CloseHolderCommand}"
                                                           CommandParameter="PageContent">
                                </i:InvokeCommandAction>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </MenuItem>

                    <Separator Margin="10, 0, 10, 0"
                               HorizontalAlignment="Stretch"></Separator>

                    <MenuItem Header="Einlass" Command="{Binding ShowEinlassCommand}">
                        <MenuItem.Icon>
                            <materialDesign:PackIcon Kind="ArrowCompressRight" />
                        </MenuItem.Icon>

                        <!--<MenuItem Header="Sub Item 1" />
                        <MenuItem Header="Sub Item 2" />
                        <MenuItem Header="Sub Item 3" />-->
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Click">
                                <i:InvokeCommandAction Command="{x:Static region:MvxWpfPresenter.CloseHolderCommand}"
                                                           CommandParameter="PageContent">
                                </i:InvokeCommandAction>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </MenuItem>

                    <MenuItem Header="Auslass" Command="{Binding ShowAuslassCommand}">
                        <MenuItem.Icon>
                            <materialDesign:PackIcon Kind="ArrowCompressLeft" />
                        </MenuItem.Icon>

                        <!--<MenuItem Header="Sub Item 1" />
                        <MenuItem Header="Sub Item 2" />
                        <MenuItem Header="Sub Item 3" />-->
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Click">
                                <i:InvokeCommandAction Command="{x:Static region:MvxWpfPresenter.CloseHolderCommand}"
                                                           CommandParameter="PageContent">
                                </i:InvokeCommandAction>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </MenuItem>

                    <MenuItem Header="Motor" Command="{Binding ShowMotorCommand}">
                        <MenuItem.Icon>
                            <materialDesign:PackIcon Kind="Engine" />
                        </MenuItem.Icon>

                        <!--<MenuItem Header="Sub Item 1" />
                        <MenuItem Header="Sub Item 2" />
                        <MenuItem Header="Sub Item 3" />-->
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Click">
                                <i:InvokeCommandAction Command="{x:Static region:MvxWpfPresenter.CloseHolderCommand}"
                                                           CommandParameter="PageContent">
                                </i:InvokeCommandAction>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </MenuItem>

                    <Separator Margin="10, 0, 10, 0"
                               HorizontalAlignment="Stretch"></Separator>

                    <MenuItem Header="Tuning" Command="{Binding ShowTuningCommand}">
                        <MenuItem.Icon>
                            <materialDesign:PackIcon Kind="TuneVertical" />
                        </MenuItem.Icon>

                        <!--<MenuItem Header="Sub Item 1" />
                        <MenuItem Header="Sub Item 2" />
                        <MenuItem Header="Sub Item 3" />-->
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Click">
                                <i:InvokeCommandAction Command="{x:Static region:MvxWpfPresenter.CloseHolderCommand}"
                                                           CommandParameter="PageContent">
                                </i:InvokeCommandAction>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </MenuItem>

                    <MenuItem Header="Dyno" Command="{Binding ShowDynoCommand}">
                        <MenuItem.Icon>
                            <materialDesign:PackIcon Kind="ChartScatterPlot" />
                        </MenuItem.Icon>

                        <!--<MenuItem Header="Sub Item 1" />
                        <MenuItem Header="Sub Item 2" />
                        <MenuItem Header="Sub Item 3" />-->
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Click">
                                <i:InvokeCommandAction Command="{x:Static region:MvxWpfPresenter.CloseHolderCommand}"
                                                           CommandParameter="PageContent">
                                </i:InvokeCommandAction>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </MenuItem>

                    <Separator Margin="10, 0, 10, 0"
                               HorizontalAlignment="Stretch"></Separator>

                    <MenuItem Header="Einstellungen" Command="{Binding ShowEinstellungenCommand}">
                        <MenuItem.Icon>
                            <materialDesign:PackIcon Kind="Cogs" />
                        </MenuItem.Icon>

                        <!--<MenuItem Header="Sub Item 1" />
                        <MenuItem Header="Sub Item 2" />
                        <MenuItem Header="Sub Item 3" />-->
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Click">
                                <i:InvokeCommandAction Command="{x:Static region:MvxWpfPresenter.CloseHolderCommand}"
                                                           CommandParameter="PageContent">
                                </i:InvokeCommandAction>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </MenuItem>
                </Menu>
            </DockPanel>
        </materialDesign:DrawerHost.LeftDrawerContent>

        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>

            <materialDesign:ColorZone Mode="PrimaryDark"
                                      Padding="16"
                                      Grid.Row="0"
                                      materialDesign:ShadowAssist.ShadowDepth="Depth2"

                                      DockPanel.Dock="Top"
                                      Height="70">

                <DockPanel>
                    <StackPanel Orientation="Horizontal"
                                Background="{x:Null}"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                DockPanel.Dock="Right">
                        <StackPanel Orientation="Horizontal">
                            <materialDesign:PackIcon VerticalAlignment="Center"
                                             HorizontalAlignment="Center"
                                             Grid.Row="0"
                                             Grid.Column="3"
                                             Foreground="DarkRed"
                                             ToolTip="KEIN Account ist eingeloggt"
                                             Visibility="{Binding Path=IsVisible, ElementName=user, Converter={StaticResource negatedBoolToVisibilityConverter}, UpdateSourceTrigger=PropertyChanged}"
                                             Kind="DriversLicenseOutline"
                                             Height="20"
                                             Width="20" />
                            <materialDesign:PackIcon x:Name="user"
                                             VerticalAlignment="Center"
                                             HorizontalAlignment="Center"
                                             Grid.Row="0"
                                             Grid.Column="3"
                                             Foreground="DarkGreen"
                                             ToolTip="Account ist eingeloggt"
                                             Visibility="{Binding Mode=TwoWay, Path=User.UserValid, Converter={StaticResource BooleanToVisibilityConverter}, UpdateSourceTrigger=PropertyChanged}"
                                             Kind="DriversLicenseOutline"
                                             Height="20"
                                             Width="20" />
                        </StackPanel>
                        <StackPanel Orientation="Horizontal"
                            Margin="20 0 0 0">
                            <materialDesign:PackIcon VerticalAlignment="Center"
                                             HorizontalAlignment="Center"
                                             Grid.Row="1"
                                             Grid.Column="3"
                                             Foreground="DarkRed"
                                             ToolTip="KEINE Lizenz vorhanden"
                                             Visibility="{Binding Path=IsVisible, ElementName=license, Converter={StaticResource negatedBoolToVisibilityConverter}, UpdateSourceTrigger=PropertyChanged}"
                                             Kind="UserKeyOutline"
                                             Height="20"
                                             Width="20" />
                            <materialDesign:PackIcon x:Name="license"
                                             VerticalAlignment="Center"
                                             HorizontalAlignment="Center"
                                             ToolTip="Lizenz vorhanden"
                                             Visibility="{Binding Mode=TwoWay, Path=User.LicenseValid, Converter={StaticResource BooleanToVisibilityConverter}, UpdateSourceTrigger=PropertyChanged}"
                                             Grid.Row="1"
                                             Grid.Column="3"
                                             Foreground="DarkGreen"
                                             Kind="UserKeyOutline"
                                             Height="20"
                                             Width="20" />
                        </StackPanel>
                    </StackPanel>

                    <StackPanel Orientation="Horizontal"
                                materialDesign:RippleAssist.IsCentered="True">
                        <ToggleButton Style="{DynamicResource MaterialDesignHamburgerToggleButton}" x:Name="MenuToggleButton" IsChecked="False" />

                        <!--<materialDesign:ColorZone Mode="Standard"
                                                  Padding="8 4 8 4"
                                                  CornerRadius="2"
                                                  Panel.ZIndex="1"
                                                  Margin="16 0 0 0"
                                                  materialDesign:ShadowAssist.ShadowDepth="Depth1">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>

                                <Button Style="{DynamicResource MaterialDesignToolButton}">
                                    <materialDesign:PackIcon Kind="Magnify"
                                                             Opacity=".56" />
                                </Button>

                                <TextBox Grid.Column="1"
                                         Margin="8 0 0 0"
                                         materialDesign:HintAssist.Hint="Suchen"
                                         materialDesign:TextFieldAssist.DecorationVisibility="Hidden"
                                         BorderThickness="0"
                                         MinWidth="200"
                                         VerticalAlignment="Center" />

                                <Button Style="{DynamicResource MaterialDesignToolButton}"
                                        Grid.Column="2">
                                    <materialDesign:PackIcon Kind="Microphone"
                                                             Opacity=".56"
                                                             Margin="8 0 0 0" />
                                </Button>
                            </Grid>
                        </materialDesign:ColorZone>

                        <Button Style="{DynamicResource MaterialDesignToolForegroundButton}"
                                Margin="8 0 0 0"
                                Panel.ZIndex="0">
                            <materialDesign:PackIcon Kind="Send" />
                        </Button>-->
                    </StackPanel>
                </DockPanel>
            </materialDesign:ColorZone>

            <ItemsControl  Grid.Row="1"
                           region:MvxContainer.Id="PageContent"></ItemsControl>
        </Grid>
    </materialDesign:DrawerHost>
</views:MvxWpfView>